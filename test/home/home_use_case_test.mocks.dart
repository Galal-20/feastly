// Mocks generated by Mockito 5.4.5 from annotations
// in feastly/test/home/home_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:feastly/src/features/ai_chat/data/data_source/image_remote_data_source.dart'
    as _i8;
import 'package:feastly/src/features/ai_chat/domain/entities/image_enitiy.dart'
    as _i4;
import 'package:feastly/src/features/home/data/data_sources/recommended_for_you_section/recommended_for_you_remote_data_source.dart'
    as _i5;
import 'package:feastly/src/features/home/data/data_sources/trending_recipes_section/trending_recipes_remote_data_source.dart'
    as _i7;
import 'package:feastly/src/features/home/data/models/recommended_for_you_model/recommended_for_you_model.dart'
    as _i2;
import 'package:feastly/src/features/home/data/models/trending_recipes_model/trending_recipes_response_model.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRecommendedForYouModel_0 extends _i1.SmartFake
    implements _i2.RecommendedForYouModel {
  _FakeRecommendedForYouModel_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTrendingRecipesResponseModel_1 extends _i1.SmartFake
    implements _i3.TrendingRecipesResponseModel {
  _FakeTrendingRecipesResponseModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(parent, parentInvocation);
}

class _FakeImageEnitiy_2 extends _i1.SmartFake implements _i4.ImageEnitiy {
  _FakeImageEnitiy_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [RecommendedForYouRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRecommendedForYouRemoteDataSource extends _i1.Mock
    implements _i5.RecommendedForYouRemoteDataSource {
  MockRecommendedForYouRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.RecommendedForYouModel> getRecommendedMeals() =>
      (super.noSuchMethod(
            Invocation.method(#getRecommendedMeals, []),
            returnValue: _i6.Future<_i2.RecommendedForYouModel>.value(
              _FakeRecommendedForYouModel_0(
                this,
                Invocation.method(#getRecommendedMeals, []),
              ),
            ),
          )
          as _i6.Future<_i2.RecommendedForYouModel>);
}

/// A class which mocks [TrendingRecipesRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTrendingRecipesRemoteDataSource extends _i1.Mock
    implements _i7.TrendingRecipesRemoteDataSource {
  MockTrendingRecipesRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i3.TrendingRecipesResponseModel> getTrendingRecipes() =>
      (super.noSuchMethod(
            Invocation.method(#getTrendingRecipes, []),
            returnValue: _i6.Future<_i3.TrendingRecipesResponseModel>.value(
              _FakeTrendingRecipesResponseModel_1(
                this,
                Invocation.method(#getTrendingRecipes, []),
              ),
            ),
          )
          as _i6.Future<_i3.TrendingRecipesResponseModel>);
}

/// A class which mocks [ImageRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockImageRemoteDataSource extends _i1.Mock
    implements _i8.ImageRemoteDataSource {
  MockImageRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i4.ImageEnitiy> getImage(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#getImage, [query]),
            returnValue: _i6.Future<_i4.ImageEnitiy>.value(
              _FakeImageEnitiy_2(this, Invocation.method(#getImage, [query])),
            ),
          )
          as _i6.Future<_i4.ImageEnitiy>);
}
